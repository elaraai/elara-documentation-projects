// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

/**
 * The {@link Analytics} module facilitates creation of paritioned in-memory {@link GroupView}'s, {@link RowView}'s or {@link View}'s of streaming {@link Table} data to load into {@link Visual}'s in an {@link Application}.
 *
 * @module Analytics
 *
 * @example
 *  ```typescript
 *  // using a predefined pipeline table
 *  import sales from "./gen/sales.pipeline"
 *  const table = sales.output_table;
 *
 *  // for example create view to aggregate total sales per product per day of week, ordered by total sales and day of week.
 *  const user = GroupView({
 *      name: "Sales Total",
 *      partition: table.partitions.all,
 *      table: table,
 *      groups: {
 *          "Product": ViewGroup({ value: table.fields.ProductTitle }),
 *          "Day of Week": ViewGroup({ value: DayName(table.fields.Date) }),
 *      },
 *      aggregations: {
 *          "Total Sales": ViewAggregation({ value: Sum(table.fields.Amount), dir: 'desc' }),
 *          "Day of Week Number": ViewAggregation({ value: Unique(DayOfWeek(table.fields.Date)), dir: 'desc' }),
 *      }
 *  })
 * ```
 */
export * from './View';

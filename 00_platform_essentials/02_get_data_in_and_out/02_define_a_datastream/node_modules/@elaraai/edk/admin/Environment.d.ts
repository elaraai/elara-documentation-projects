// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { ELARASchema } from "../schema/ELARASchema";
/** @internal */
export declare type EnvironmentVariable = {
    name: string;
    value?: string;
    overwrite: boolean;
};
/**
 * Defines a {@link EnvironmentDefinition} identity and information.
 *
 * @category Environment
 */
export declare type EnvironmentDefinition = {
    /** the name of the {@link EnvironmentVariable} */
    name: string;
    /** true if the {@link EnvironmentVariable} should be overwritten */
    overwrite?: boolean;
};
/**
 * Create a {@link EnvironmentVariable} identity and information.
 *
 * @param definition: the desired {@link EnvironmentDefinition}.
 * @return a valid {@link EnvironmentVariable}
 *
 * @category Environment
 *
 * @example
 *  ```typescript
 *  //To create an EnvironmentVariable pointing to a DB_NAME environment variable
 *  const env = EnvironmentVariable({ name: 'DB_NAME' })
 * ```
 */
export declare function EnvironmentVariable(definition: EnvironmentDefinition): EnvironmentDefinition;
/** @internal */
export declare function toEnvironmentVariable(definition: EnvironmentDefinition): EnvironmentVariable;
/**
 * Create a {@link ELARASchema} containing a {@link EnvironmentVariable} identity and information.
 *
 * @param definition: the desired {@link EnvironmentDefinition}
 * @return a valid {@link EnvironmentVariable} within a {@link ELARASchema}
 *
 * @remarks Adding an {@link EnvironmentVariable} to an {@link ELARASchema} preserves the secrecy of said system environment value by only injecting values during the dpeloyment process.
 *
 * @category Environment
 *
 * @example
 *  ```typescript
 *  //To create an ELARASchema containing an EnvironmentVariable pointing to a DB_NAME environment variable
 *  const env = EnvironmentSchema({
 *    name: 'DB_NAME',
 * })
 * ```
 */
export declare function EnvironmentSchema(def: EnvironmentDefinition): ELARASchema;

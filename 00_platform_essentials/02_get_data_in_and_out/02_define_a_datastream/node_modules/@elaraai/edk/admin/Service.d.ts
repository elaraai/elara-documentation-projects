// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { Row } from "../data/data";
/** @internal */
export interface Service {
    identity: string;
    key?: string;
    state: Row;
    roles: string[];
}
/**
 * Defines a {@link ServiceDefinition} identity and information.
 *
 * @category Service
 */
export declare type ServiceDefinition = {
    /** the identity of the {@link Service} */
    identity: string;
    /** a secondary key identity */
    key?: string;
    /** the {@link Role}'s' that the {@link Service} is a member of */
    roles: string[];
};
/**
 * Create a {@link Service} of a specific identity.
 *
 * @param definition: the desired {@link ServiceDefinition}.
 * @return a valid {@link Service}
 *
 * @category Service
 *
 * @example
 *  ```typescript
 *  //To grant read and write access for the role Worker
 *  const service = Service({
 *    identity: 'External System',
 *    key: '5MLYYvXL969BLWvD',
 *    roles: ['System Service']
 *  })
 * ```
 */
export declare function Service(user: Omit<ServiceDefinition, 'state'>): ServiceDefinition;

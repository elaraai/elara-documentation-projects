// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

/**
 * Permissions that can be assigned to a {@link Role} in a {@link Grant}
 *
 * @category Grant
 */
export declare type GrantActions = 'write' | 'read' | 'delete' | 'all';
/** @internal */
export interface Grant {
    role: string;
    actions: GrantActions[];
}
/**
 * Defines a {@link GrantDefinition} of a specific {@link GrantActions}'s for a {@link Role}.
 *
 * @category Grant
 */
export declare type GrantDefinition = {
    /**  the role name to apply to. */
    role: string;
    /** the {@link GrantActions}'s to apply. */
    actions: GrantActions[];
};
/**
 * Create a {@link GrantDefinition} of a specific {@link GrantActions}'s for a {@link Role}.
 *
 * @param definition: the desired {@link GrantDefinition}.
 * @return a valid {@link Grant}
 *
 * @category Grant
 *
 * @example
 *  ```typescript
 *  //To grant read and write access for the role Worker
 *  const grant = Grant({
 *      role: 'Worker',
 *      actions: ['read', 'write']
 *  })
 * ```
 */
export declare function Grant(definition: GrantDefinition): GrantDefinition;

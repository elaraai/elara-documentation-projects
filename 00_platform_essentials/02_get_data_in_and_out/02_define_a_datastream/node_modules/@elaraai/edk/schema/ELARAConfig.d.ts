// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

/**
 * The {@link EntityType} describing a type of an {@link ELARASchema} entity.
 *
 * @category Config
 */
export declare type EntityType = 'environment' | 'datasource' | 'pipeline' | 'structure' | 'view' | 'visual' | 'result' | 'page' | 'user' | 'plugin' | 'application' | 'scenario';
/**
 * The {@link EntityAsset} describing an {@link ELARASchema} entity.
 *
 * @category Config
 */
export declare type EntityAsset = {
    /** the asset name */
    name: string;
    /** the asset definition file path */
    def_path: string;
    /** the asset gen file path */
    gen_path: string;
    /** @internal */
    type: 'entity';
    /** the entity type for the asset */
    entity_type: EntityType;
};
/**
 * The {@link LogLevel} describing the ELARA log level.
 *
 * @category Config
 */
export declare type LogLevel = "error" | "warn" | "info" | "debug" | "none";
/**
 * The {@link DeploymentAsset} describing a deployment entity.
 *
 * @category Config
 */
export declare type DeploymentAsset = {
    /** the deployment name */
    name: string;
    /** the server name */
    server: string;
    /** the loglevel  */
    loglevel: LogLevel | undefined;
    /** the application to include */
    application: string;
    /** set to true to prompt before deploy */
    warn: boolean | undefined;
    /** the number of training samples */
    training_samples: bigint | undefined;
    /** the number iterations when training a Guassian Process */
    training_iterations_gp: bigint | undefined;
    /** the number of iterations when training with XGBoost */
    training_iterations_xgb_opt: bigint | undefined;
    /** the number iterations to train the utility rate estimator */
    training_iterations_utility_est: bigint | undefined;
    /** the number of iterations optimization should use */
    optimization_iterations: bigint | undefined;
    /** the number of serial mini-iterations optimization should use per iteration */
    optimization_serial_iterations: bigint | undefined;
    /** the scale of randomness optimization should allow when exploring the cost surface (in units of the total objective function) */
    optimization_randomness: number | undefined;
    /** how frequently optimization will emit proposals - final result only, or every time a new "best" configuration is discovered */
    optimization_emit_proposals: "final" | "current_best" | "current_best_all" | undefined;
    /** the number of simulation trajectories to use for prediction */
    simulation_trajectories: bigint | undefined;
    /** the number of simulation trajectories to use for optimization */
    optimization_trajectories: bigint | undefined;
    /** the number of simulation trajectories to use for sensitivity calculations */
    sensitivity_trajectories: bigint | undefined;
    /** the asset type */
    type: 'deployment';
};
/** @internal */
export declare function check_emit_proposals(str: string): "final" | "current_best" | "current_best_all";
/**
 * The {@link ELARAAsset} describing a solution entity.
 *
 * @category Config
 */
export declare type ELARAAsset = EntityAsset | DeploymentAsset;
/**
 * The {@link ELARAConfig} describing a solution {@link ELARAAsset} configuration.
 *
 * @category Config
 */
export declare type ELARAConfig = {
    project: {
        name: string;
    };
    assets: Record<string, ELARAAsset>;
};

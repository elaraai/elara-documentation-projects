// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

/**
 * The {@link Table} module facilitates creation of {@link Table}'s of streaming {@link Expression}'s, rather than being created explicitly, {@link Table}'s are created as outputs of {@link ELARASchema} components.
 *
 * @module Table
 *
 * @example
 * ```typescript
 *  // for example create a `Table` of some nested data containing among other things an object of type:
 *  const objectType = Variable('object', StructType({ count: 'integer', date: 'datetime' }))
 *  // create the table
 *  const table = Table({
 *      name: 'Nested Table',
 *      primary_key: Print(Variable('date', 'datetime')),
 *      fields: {
 *      // a date value
 *          date: Variable('date', 'datetime'),
 *          // an object containing a date and number
 *          object: Variable('object', objectType)
 *          // ... some other fields
 *          array: Variable('object', ArrayType(DictType('float')),
 *          // ...
 *      },
 *      partitions: {
 *          // partition the table by week
 *          'By Week': PartitionByWeek(Variable('date', 'datetime'))
 *          // partition the table by week, but by the date within the object
 *          'By Day': PartitionByDay(GetField(Variable('object', objectType), 'date'))
 *      }
 * })
 * ```
 */
export * from './data';
export * from './Table';
export * from './builtins';

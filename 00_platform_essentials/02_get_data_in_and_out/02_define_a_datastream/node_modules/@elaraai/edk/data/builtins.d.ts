// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { Variable } from '../east/functions';
import { DictType } from '../east/types';
import { Table } from './Table';
/** @internal */
export declare type StatusRow = {
    item: string;
    task: string;
    status: string;
    metadata: Map<string, string>;
    datetime: Date;
    success: bigint;
    failed: bigint;
    duration: number;
    max_duration: number;
    total_duration: number;
    memory: bigint;
    max_memory: bigint;
};
/**
 * Builtin {@link Table}s to provide the status of services and tasks
 *
 * @category Table
 */
export declare const StatusTables: {
    Core: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    DataSource: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Pipeline: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Mapping: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Prediction: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Training: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Optimization: Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
};
export declare const OptimizationTable: Table;
export declare const PredictionPerformanceTable: Table;
export declare const ScenarioTable: Table;
/**
 * A record of all builtin {@link Table}s
 *
 * @category Table
 */
export declare const BuiltinTables: {
    "Status.Core": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.DataSource": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.Pipeline": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.Mapping": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.Prediction": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.Training": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    "Status.Optimization": Omit<Table, "fields"> & {
        fields: {
            item: Variable<"string">;
            task: Variable<"string">;
            status: Variable<"string">;
            metadata: Variable<DictType<"string">>;
            datetime: Variable<"datetime">;
            success: Variable<"integer">;
            failed: Variable<"integer">;
            duration: Variable<"float">;
            max_duration: Variable<"float">;
            total_duration: Variable<"float">;
            memory: Variable<"integer">;
            max_memory: Variable<"integer">;
        };
    };
    Optimization: Table;
    PredictionPerformance: Table;
    Scenario: Table;
};

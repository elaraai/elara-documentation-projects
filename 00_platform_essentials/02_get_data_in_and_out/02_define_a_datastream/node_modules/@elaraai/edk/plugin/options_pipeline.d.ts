// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { FunctionPropertyStructure, Scenario } from '..';
import { PrimitiveType } from '../east';
import { ELARASchema } from '../schema';
import { AgentStructure } from '../structure/Agent';
import { OptionPropertyStructure } from '../structure/Option';
import { ProcessStructure } from '../structure/Process';
import { ValuePropertyStructure } from '../structure/Property';
import { ResourceStructure } from '../structure/Resource';
/**
 * A {@link OptionsPipelinePluginDefinition} to configure the {@link OptionsPipelinePlugin}.
 *
 * @category Structure
 */
export declare type OptionsPipelinePluginDefinition = {
    /** the name for the {@link OptionPlugin}  */
    name: string;
    /** the entity to create the plugin from */
    entity: AgentStructure | ResourceStructure | ProcessStructure;
    /** The {@link PropertyStructure}'s to include (for adefined scenarios) */
    properties?: Record<string, ValuePropertyStructure | FunctionPropertyStructure>;
    /** The {@link OptionPropertyStructure}'s to include (for adefined scenarios) */
    options: Record<string, OptionPropertyStructure<PrimitiveType | 'set'> & ({
        manual: string[];
    } | {
        sensitivity: string[];
    } | {
        automatic: string[];
    })>;
    /** Aside from the option scenarios, include these */
    scenarios?: Scenario[];
    /** Prepend the artefact names with this */
    prepend?: string;
};
/**
 * Create a {@link ELARASchema} to create a pipeline flattening option, value and function property values across defined scenarios.
 *
 * @param definition: the desired {@link OptionsPipelinePluginDefinition}.
 * @return a {@link ELARASchema} containing a {@link OptionsPipelinePlugin} contents
 *
 * @category Structure
 *
 */
export declare function OptionsPipelinePlugin(config: OptionsPipelinePluginDefinition): ELARASchema;

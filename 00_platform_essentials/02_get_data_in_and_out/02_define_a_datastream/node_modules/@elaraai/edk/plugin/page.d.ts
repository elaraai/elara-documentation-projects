// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { ELARASchema } from '../schema/ELARASchema';
import { Page } from '../page';
/**
 * A {@link PagePluginDefinition} to configure the {@link PagePlugin}.
 *
 * @category Application
 */
export declare type PagePluginDefinition = {
    /** the `Record` containing one or more {@link Page}'s */
    pages: Record<string, Page> | Page[];
    /** prepend the artefact names with this */
    prepend?: string;
    /** true if information about operations be included  */
    operations?: boolean;
};
/**
 * Utility plugin to simplify injecting one or more pages into a {@link ELARASchema}.
 *
 * @param definition: the desired {@link PagePluginDefinition}.
 * @return a {@link ELARASchema} containing a {@link PagePluginDefinition} contents
 *
 * @category Application
 *
 * @example
 * ```typescript
 * // get the page to add to the plugin
 * import page_one from './gen/page_one.page'
 * import page_two from './gen/page_two.page'
 * // Create diagnostic content for multiple pages.
 * const plugin = PagePlugin({
 *      pages: {
 *          One: page_one,
 *          Two: page_two
 *      }
 * })
 * ```
 */
export declare function PagePlugin(config: PagePluginDefinition): ELARASchema;

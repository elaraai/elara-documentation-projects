// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { ApplicationColors, ColorValue, RowFixedColorDefinition, RowKeyColorDefinition, RowLinearColorDefinition, RowOrdinalColorDefinition } from "../page";
import { ArrayType, DictType, EastFunction, NumericType, PrimitiveType, Variable } from "../east";
import { Partition, Table } from "../data/Table";
import { ELARASchema } from "../schema";
/**
 * A value to display in the `TrendPlugin`.
 *
 * @category Application
 */
export declare type TrendValue = {
    value: EastFunction<DictType<NumericType>>;
    dash?: EastFunction<ArrayType<'float'>>;
    color?: RowKeyColorDefinition | ColorValue;
} | {
    value: EastFunction<NumericType>;
    dash?: EastFunction<ArrayType<'float'>>;
    color?: RowOrdinalColorDefinition | RowLinearColorDefinition | ColorValue | RowFixedColorDefinition;
};
/**
 * A {@link TrendPluginDefinition} to configure the {@link TrendPlugin}.
 *
 * @category Application
 */
export declare type TrendPluginDefinition = {
    /** the name of the generated {@link Trend} page  */
    name?: string;
    /** the {@link Trend} to use for the {@link TrendValue}'s */
    table: Table;
    /** the {@link Partition} to use for the {@link TrendValue}'s */
    partition?: Partition;
    /** the date {@trend Variable} for the x axis */
    x: Variable<'datetime'>;
    /** the {@trend TrendValue} for the y axes */
    y: Record<string, TrendValue>;
    /** the {@trend Variable} to display in the tooltip */
    values?: Record<string, Variable<PrimitiveType>>;
    /** the {@link ApplicationColors} to apply */
    pallette?: ApplicationColors;
    /** prepend the artefact names with this */
    prepend?: string;
};
/**
 * Create a diagnostic page showing a Trend for {@link Variable}s within a {@link Table}
 *
 * @param definition: the desired {@link TrendPluginDefinition}.
 * @return a {@link ELARASchema} containing a {@link TrendPluginDefinition} contents
 *
 * @category Application
 *
 * @example
 * ```typescript
 *   // use a simulation plugin
 *   import simulation from "./gen/simulation.plugin"
 *   // get the simulated values for specific entity
 *   const cash_results = simulation.pipeline["Results.Cash Balance"].output_table
 *   // Create a TrendPlugin showing a table and chart for simulated a cash balance.
 *   const trend = TrendPlugin({
 *       name: "Cash Balance",
 *       table: cash,
 *       x: cash.fields.Date,
 *       y: {
 *           Balance: { value: cash.fields.Balance },
 *       },
 *   })
 * ```
 */
export declare function TrendPlugin(config: TrendPluginDefinition): ELARASchema;

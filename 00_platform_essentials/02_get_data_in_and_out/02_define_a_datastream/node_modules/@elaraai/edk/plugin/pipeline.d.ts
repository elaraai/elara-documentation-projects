// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { ELARASchema } from '../schema/ELARASchema';
import { Pipeline } from '../pipeline/Pipeline';
/**
 * A {@link PipelinePluginDefinition} to configure the {@link PipelinePlugin}.
 *
 * @category Pipeline
 */
export declare type PipelinePluginDefinition = {
    /** the `Record` containing one or more {@link Pipeline}'s */
    pipelines: Record<string, Pipeline> | Pipeline[];
    /** prepend the artefact names with this */
    prepend?: string;
    /**
     * true if information about operations be included
     * @deprecated Replaced with Pipeline.opeation_tables
     * */
    operations?: boolean;
    /** true if information about status should be included  */
    status?: boolean;
};
/**
 * Utility plugin to simplify creating diagnostic content for `Pipeline`'s.
 *
 * @param definition: the desired {@link PipelinePluginDefinition}.
 * @return a {@link ELARASchema} containing a {@link PipelinePluginDefinition} contents
 *
 * @category Pipeline
 *
 * @example
 * ```typescript
 * // get the pipeline to add to the plugin
 * import pipeline_one from './gen/pipeline_one.pipeline'
 * import pipeline_two from './gen/pipeline_two.pipeline'
 * // Create diagnostic content for multiple pipelines.
 * const plugin = PipelinePlugin({
 *  pipelines: {
 *      One: pipeline_one,
 *      Two: pipeline_two
 *  }
 * })
 * ```
 */
export declare function PipelinePlugin(config: PipelinePluginDefinition): ELARASchema;

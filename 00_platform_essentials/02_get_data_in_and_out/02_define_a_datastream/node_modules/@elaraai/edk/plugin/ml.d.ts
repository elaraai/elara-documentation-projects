// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { EastType } from '../east';
import { ApplicationColors } from '../page';
import { ELARASchema } from '../schema';
import { MLFunctionStructure } from '../structure/Function';
/**
 * A {@link MLFunctionPluginDefinition} to configure the {@link MLFunctionPlugin}.
 *
 * @category Structure
 */
export declare type MLFunctionPluginDefinition<T extends EastType> = {
    /** the {@link MLFunctionStructure} to apply */
    func: MLFunctionStructure<T>;
    /** the {@link ApplicationColors} to apply */
    pallette?: ApplicationColors;
    /** prepend the artefact names with this */
    prepend?: string;
};
/**
 * Create a results pages for diagnosing an {@link MLFunctionStructure}.
 *
 * @param definition: the desired {@link MLFunctionPlugin}.
 * @return a {@link ELARASchema} containing a {@link MLFunctionPlugin} contents
 *
 * @category Structure
 *
 * @example
 * ```typescript
 *   // Import a Transaction Schema containing the MLFunction.
 *   import orders from "./gen/orders.structure"
 *   // Create a MLFunctionPlugin for an order qty MLFunction.
 *   const ml = MLFunctionPlugin({ func: orders.properties.qty.function })
 * ```
 */
export declare function MLFunctionPlugin<T extends EastType>(definition: MLFunctionPluginDefinition<T>): ELARASchema;

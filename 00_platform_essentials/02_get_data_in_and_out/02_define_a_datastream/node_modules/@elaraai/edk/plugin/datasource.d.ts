// Â© Copyright 2018- 2022 - Elara AI Pty Ltd ACN 627 124 903
//
// Licensed under the EDK Licence version LICENSE-1.04.
//
// You may only use this file in accordance with the terms and conditions contained in EDK
// Licence - Version LICENSE-1.04. The full version of the EDK Licence is available at:
// https://elaraai.github.io/docs/license

import { DataSource } from '../datasource/DataSource';
import { ELARASchema } from '../schema/ELARASchema';
/**
 * A {@link DataSourcePluginDefinition} to configure the {@link DataSourcePlugin}.
 *
 * @category DataSource
 */
export declare type DataSourcePluginDefinition = {
    /** the `Record` or `Array` containing one or more {@link DataSource}'s */
    datasources: Record<string, DataSource> | DataSource[];
    /** prepend the artefact names with this */
    prepend?: string;
};
/**
 * Utility plugin to simplify creating diagnostic content for `DataSource`'s.
 *
 * @param definition: the desired {@link DataSourcePluginDefinition}.
 * @return a {@link ELARASchema} containing a {@link DataSourcePluginDefinition} contents
 *
 * @category DataSource
 *
 * @example
 * ```typescript
 * // get the datasource to add to the plugin
 * import datasource_one from './gen/datasource_one.datasource'
 * import datasource_two from './gen/datasource_two.datasource'
 * // Create diagnostic content for multiple datasources with a `Record`
 * const plugin = DataSourcePlugin({
 *  datasources: {
 *      One: datasource_one,
 *      Two: datasource_two
 *  }
 * })
 * ```
 * Or using arrays:
 * @example
 * ```typescript
 * // get the datasource to add to the plugin
 * import datasource_one from './gen/datasource_one.datasource'
 * import datasource_two from './gen/datasource_two.datasource'
 * // Create diagnostic content for multiple datasources with an `Array`
 * const plugin = DataSourcePlugin({
 *  datasources: [datasource_one, datasource_two]
 * })
 * ```
 */
export declare function DataSourcePlugin(config: DataSourcePluginDefinition): ELARASchema;
